crystal_doc_search_index_callback({"repository_name":"brotli","body":"# Crystal Brotli\n![CI](https://github.com/naqvis/brotli.cr/workflows/CI/badge.svg)\n[![GitHub release](https://img.shields.io/github/release/naqvis/brotli.svg)](https://github.com/naqvis/brotli.cr/releases)\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://naqvis.github.io/brotli.cr/)\n\nCrystal bindings to the [Brotli](https://github.com/google/brotli) compression library.\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     brotli:\n       github: naqvis/brotli.cr\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"brotli\"\n```\n\n`brotli` shard provides both `Compress::Brotli::Reader` and `Compress::Brotli::Writer` , as well as `Compress::Brotli#decode` and `Compress::Brotli#encode` methods for quick usage.\n\nRefer to `specs` for sample usage.\n\n## Example: decompress an brotli file\n#\n```crystal\nrequire \"brotli\"\n\nstring = File.open(\"file.br\") do |file|\n   Compress::Brotli::Reader.open(file) do |brotli|\n     brotli.gets_to_end\n   end\nend\npp string\n```\n\n## Example: compress to brotli compression format\n#\n```crystal\nrequire \"brotli\"\n\nFile.write(\"file.txt\", \"abcd\")\n\nFile.open(\"./file.txt\", \"r\") do |input_file|\n  File.open(\"./file.br\", \"w\") do |output_file|\n    Compress::Brotli::Writer.open(output_file) do |brotli|\n      IO.copy(input_file, brotli)\n    end\n  end\nend\n```\n\n## Development\n\nTo run all tests:\n\n```\ncrystal spec\n```\n\n## Contributing\n\n1. Fork it (<https://github.com/naqvis/brotli.cr/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Ali Naqvi](https://github.com/naqvis) - creator and maintainer\n","program":{"html_id":"brotli/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"brotli","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"brotli/Compress","path":"Compress.html","kind":"module","full_name":"Compress","name":"Compress","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"brotli","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"brotli/Compress/Brotli","path":"Compress/Brotli.html","kind":"module","full_name":"Compress::Brotli","name":"Brotli","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"brotli","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.4\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"brotli/Compress","kind":"module","full_name":"Compress","name":"Compress"},"doc":"`Brotli` Crystal Wrapper","summary":"<p><code><a href=\"../Compress/Brotli.html\">Brotli</a></code> Crystal Wrapper</p>","class_methods":[{"id":"decode(compressed:Slice)-class-method","html_id":"decode(compressed:Slice)-class-method","name":"decode","doc":null,"summary":null,"abstract":false,"args":[{"name":"compressed","doc":null,"default_value":"","external_name":"compressed","restriction":"Slice"}],"args_string":"(compressed : Slice)","args_html":"(compressed : Slice)","location":{"filename":"src/brotli.cr","line_number":8,"url":null},"def":{"name":"decode","args":[{"name":"compressed","doc":null,"default_value":"","external_name":"compressed","restriction":"Slice"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"buf = IO::Memory.new(compressed)\nuncompressed = Reader.open(buf) do |br|\n  br.gets_to_end\nend\nuncompressed.to_slice\n"}},{"id":"decoder_version_string-class-method","html_id":"decoder_version_string-class-method","name":"decoder_version_string","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/brotli.cr","line_number":29,"url":null},"def":{"name":"decoder_version_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"version_string(LibBrotli.decoder_version)"}},{"id":"encode(content:String,options:WriterOptions=WriterOptions.default)-class-method","html_id":"encode(content:String,options:WriterOptions=WriterOptions.default)-class-method","name":"encode","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String"},{"name":"options","doc":null,"default_value":"WriterOptions.default","external_name":"options","restriction":"WriterOptions"}],"args_string":"(content : String, options : WriterOptions = <span class=\"t\">WriterOptions</span>.default)","args_html":"(content : String, options : <a href=\"../Compress/Brotli/WriterOptions.html\">WriterOptions</a> = <span class=\"t\">WriterOptions</span>.default)","location":{"filename":"src/brotli.cr","line_number":16,"url":null},"def":{"name":"encode","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"String"},{"name":"options","doc":null,"default_value":"WriterOptions.default","external_name":"options","restriction":"WriterOptions"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"encode(content.to_slice, options)"}},{"id":"encode(content:Slice,options:WriterOptions=WriterOptions.default)-class-method","html_id":"encode(content:Slice,options:WriterOptions=WriterOptions.default)-class-method","name":"encode","doc":null,"summary":null,"abstract":false,"args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"Slice"},{"name":"options","doc":null,"default_value":"WriterOptions.default","external_name":"options","restriction":"WriterOptions"}],"args_string":"(content : Slice, options : WriterOptions = <span class=\"t\">WriterOptions</span>.default)","args_html":"(content : Slice, options : <a href=\"../Compress/Brotli/WriterOptions.html\">WriterOptions</a> = <span class=\"t\">WriterOptions</span>.default)","location":{"filename":"src/brotli.cr","line_number":20,"url":null},"def":{"name":"encode","args":[{"name":"content","doc":null,"default_value":"","external_name":"content","restriction":"Slice"},{"name":"options","doc":null,"default_value":"WriterOptions.default","external_name":"options","restriction":"WriterOptions"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"buf = IO::Memory.new\nBrotli::Writer.open(buf) do |br|\n  br.write(content)\nend\nbuf.rewind\nbuf.to_slice\n"}},{"id":"encoder_version_string-class-method","html_id":"encoder_version_string-class-method","name":"encoder_version_string","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/brotli.cr","line_number":33,"url":null},"def":{"name":"encoder_version_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"version_string(LibBrotli.encoder_version)"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"brotli/Compress/Brotli/BrotliError","path":"Compress/Brotli/BrotliError.html","kind":"class","full_name":"Compress::Brotli::BrotliError","name":"BrotliError","abstract":false,"superclass":{"html_id":"brotli/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"brotli/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"brotli/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"brotli/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"brotli","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"brotli/Compress/Brotli","kind":"module","full_name":"Compress::Brotli","name":"Brotli"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"brotli/Compress/Brotli/Reader","path":"Compress/Brotli/Reader.html","kind":"class","full_name":"Compress::Brotli::Reader","name":"Reader","abstract":false,"superclass":{"html_id":"brotli/IO","kind":"class","full_name":"IO","name":"IO"},"ancestors":[{"html_id":"brotli/IO/Buffered","kind":"module","full_name":"IO::Buffered","name":"Buffered"},{"html_id":"brotli/IO","kind":"class","full_name":"IO","name":"IO"},{"html_id":"brotli/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"brotli/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"brotli","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"BUF_SIZE","name":"BUF_SIZE","value":"4096","doc":"buffer size that avoids execessive round-trips between C and Crystal but doesn't waste too much\nmemory on buffering. Its arbitrarily chosen to be equal to the constant used in IO::copy","summary":"<p>buffer size that avoids execessive round-trips between C and Crystal but doesn't waste too much memory on buffering.</p>"}],"included_modules":[{"html_id":"brotli/IO/Buffered","kind":"module","full_name":"IO::Buffered","name":"Buffered"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"brotli/Compress/Brotli","kind":"module","full_name":"Compress::Brotli","name":"Brotli"},"doc":"string = File.open(\"file.br\") do |file|\n   Compress::Brotli::Reader.open(file) do |br|\n     br.gets_to_end\n   end\nend\npp string\n```","summary":"<p>string = File.open(\"file.br\") do |file|    Compress::Brotli::Reader.open(file) do |br|      br.gets_to_end    end end pp string <code></code>`</p>","class_methods":[{"id":"open(io:IO,sync_close:Bool=false,&)-class-method","html_id":"open(io:IO,sync_close:Bool=false,&)-class-method","name":"open","doc":"Creates a new reader from the given *io*, yields it to the given block,\nand closes it at its end.","summary":"<p>Creates a new reader from the given <em>io</em>, yields it to the given block, and closes it at its end.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"sync_close","doc":null,"default_value":"false","external_name":"sync_close","restriction":"Bool"}],"args_string":"(io : IO, sync_close : Bool = <span class=\"n\">false</span>, &)","args_html":"(io : IO, sync_close : Bool = <span class=\"n\">false</span>, &)","location":{"filename":"src/brotli/reader.cr","line_number":44,"url":null},"def":{"name":"open","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"sync_close","doc":null,"default_value":"false","external_name":"sync_close","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"reader = new(io, sync_close: sync_close)\nbegin\n  yield reader\nensure\n  reader.close\nend\n"}},{"id":"open(io:IO,sync_close=false,&)-class-method","html_id":"open(io:IO,sync_close=false,&)-class-method","name":"open","doc":"Creates a new reader from the given *io*, yields it to the given block,\nand closes it at the end.","summary":"<p>Creates a new reader from the given <em>io</em>, yields it to the given block, and closes it at the end.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"sync_close","doc":null,"default_value":"false","external_name":"sync_close","restriction":""}],"args_string":"(io : IO, sync_close = <span class=\"n\">false</span>, &)","args_html":"(io : IO, sync_close = <span class=\"n\">false</span>, &)","location":{"filename":"src/brotli/reader.cr","line_number":56,"url":null},"def":{"name":"open","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"sync_close","doc":null,"default_value":"false","external_name":"sync_close","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"reader = new(io, sync_close: sync_close)\nbegin\n  yield reader\nensure\n  reader.close\nend\n"}},{"id":"open(filename:String,&)-class-method","html_id":"open(filename:String,&)-class-method","name":"open","doc":"Creates a new reader from the given *filename*, yields it to the given block,\nand closes it at the end.","summary":"<p>Creates a new reader from the given <em>filename</em>, yields it to the given block, and closes it at the end.</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"args_string":"(filename : String, &)","args_html":"(filename : String, &)","location":{"filename":"src/brotli/reader.cr","line_number":63,"url":null},"def":{"name":"open","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"reader = new(filename)\nbegin\n  yield reader\nensure\n  reader.close\nend\n"}}],"constructors":[{"id":"new(io:IO,sync_close:Bool=false)-class-method","html_id":"new(io:IO,sync_close:Bool=false)-class-method","name":"new","doc":"Creates an instance of XZ::Reader.","summary":"<p>Creates an instance of XZ::Reader.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"sync_close","doc":null,"default_value":"false","external_name":"sync_close","restriction":"Bool"}],"args_string":"(io : IO, sync_close : Bool = <span class=\"n\">false</span>)","args_html":"(io : IO, sync_close : Bool = <span class=\"n\">false</span>)","location":{"filename":"src/brotli/reader.cr","line_number":33,"url":null},"def":{"name":"new","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"sync_close","doc":null,"default_value":"false","external_name":"sync_close","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(io, sync_close)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(filename:String)-class-method","html_id":"new(filename:String)-class-method","name":"new","doc":"Creates a new reader from the given *filename*.","summary":"<p>Creates a new reader from the given <em>filename</em>.</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"args_string":"(filename : String)","args_html":"(filename : String)","location":{"filename":"src/brotli/reader.cr","line_number":50,"url":null},"def":{"name":"new","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(::File.new(filename), sync_close: true)"}}],"instance_methods":[{"id":"closed?:Bool-instance-method","html_id":"closed?:Bool-instance-method","name":"closed?","doc":"Returns `true` if this reader is closed.","summary":"<p>Returns <code>true</code> if this reader is closed.</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/brotli/reader.cr","line_number":24,"url":null},"def":{"name":"closed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@closed"}},{"id":"sync_close=(sync_close:Bool)-instance-method","html_id":"sync_close=(sync_close:Bool)-instance-method","name":"sync_close=","doc":"If `#sync_close?` is `true`, closing this IO will close the underlying IO.","summary":"<p>If <code><a href=\"../../Compress/Brotli/Reader.html#sync_close?:Bool-instance-method\">#sync_close?</a></code> is <code>true</code>, closing this IO will close the underlying IO.</p>","abstract":false,"args":[{"name":"sync_close","doc":null,"default_value":"","external_name":"sync_close","restriction":"Bool"}],"args_string":"(sync_close : Bool)","args_html":"(sync_close : Bool)","location":{"filename":"src/brotli/reader.cr","line_number":21,"url":null},"def":{"name":"sync_close=","args":[{"name":"sync_close","doc":null,"default_value":"","external_name":"sync_close","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@sync_close = sync_close"}},{"id":"sync_close?:Bool-instance-method","html_id":"sync_close?:Bool-instance-method","name":"sync_close?","doc":"If `#sync_close?` is `true`, closing this IO will close the underlying IO.","summary":"<p>If <code><a href=\"../../Compress/Brotli/Reader.html#sync_close?:Bool-instance-method\">#sync_close?</a></code> is <code>true</code>, closing this IO will close the underlying IO.</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/brotli/reader.cr","line_number":21,"url":null},"def":{"name":"sync_close?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@sync_close"}},{"id":"unbuffered_close-instance-method","html_id":"unbuffered_close-instance-method","name":"unbuffered_close","doc":"Closes this reader.","summary":"<p>Closes this reader.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/brotli/reader.cr","line_number":126,"url":null},"def":{"name":"unbuffered_close","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @closed || @state.nil?\n  return\nend\n@closed = true\nLibBrotli.decoder_destroy_instance(@state)\nif @sync_close\n  @io.close\nend\n"}},{"id":"unbuffered_flush-instance-method","html_id":"unbuffered_flush-instance-method","name":"unbuffered_flush","doc":"Flushes the wrapped `IO`.","summary":"<p>Flushes the wrapped <code>IO</code>.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/brotli/reader.cr","line_number":121,"url":null},"def":{"name":"unbuffered_flush","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(IO::Error.new(\"Can't flush Brotli::Reader\"))"}},{"id":"unbuffered_read(slice:Bytes)-instance-method","html_id":"unbuffered_read(slice:Bytes)-instance-method","name":"unbuffered_read","doc":"Reads at most *slice.size* bytes from the wrapped `IO` into *slice*.\nReturns the number of bytes read.","summary":"<p>Reads at most <em>slice.size</em> bytes from the wrapped <code>IO</code> into <em>slice</em>.</p>","abstract":false,"args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Bytes"}],"args_string":"(slice : Bytes)","args_html":"(slice : Bytes)","location":{"filename":"src/brotli/reader.cr","line_number":73,"url":null},"def":{"name":"unbuffered_read","args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"check_open\nif ((LibBrotli.decoder_has_more_output(@state)) == 0) && @chunk.empty?\n  m = @io.read(@buffer)\n  if m == 0\n    return m\n  end\n  @chunk = @buffer[0, m]\nend\nif slice.empty?\n  return 0\nend\nn = 0\nloop do\n  in_remaining = @chunk.size.to_u64\n  out_remaining = slice.size.to_u64\n  in_ptr = @chunk.to_unsafe\n  out_ptr = slice.to_unsafe\n  result = LibBrotli.decoder_decompress_stream(@state, pointerof(in_remaining), pointerof(in_ptr), pointerof(out_remaining), pointerof(out_ptr), nil)\n  n = slice.size - out_remaining\n  consumed = @chunk.size - in_remaining\n  @chunk = @chunk[consumed..]\n  case result\n  when LibBrotli::DecoderResult::DecoderResultSuccess\n    if @chunk.size == 0\n    else\n      raise(BrotliError.new(\"excessive input\"))\n    end\n    return n\n  when LibBrotli::DecoderResult::DecoderResultError\n    raise(BrotliError.new((LibBrotli.decoder_get_error_code(@state)).to_s))\n  when LibBrotli::DecoderResult::DecoderResultNeedsMoreOutput\n    if n == 0\n      raise(BrotliError.new(\"Short input buffer\"))\n    end\n    return n\n  when LibBrotli::DecoderResult::DecoderResultNeedsMoreInput\n  end\n  if @chunk.size == 0\n  else\n    raise(BrotliError.new(\"invalid state\"))\n  end\n  if n > 0\n    return n\n  end\n  enc_n = @io.read(@buffer)\n  if enc_n == 0\n    return 0\n  end\n  @chunk = @buffer[0, enc_n]\nend\nn\n"}},{"id":"unbuffered_rewind-instance-method","html_id":"unbuffered_rewind-instance-method","name":"unbuffered_rewind","doc":"Rewinds the wrapped `IO`.","summary":"<p>Rewinds the wrapped <code>IO</code>.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/brotli/reader.cr","line_number":134,"url":null},"def":{"name":"unbuffered_rewind","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"check_open\n@io.rewind\ninitialize(@io, @sync_close)\n"}},{"id":"unbuffered_write(slice:Bytes)-instance-method","html_id":"unbuffered_write(slice:Bytes)-instance-method","name":"unbuffered_write","doc":"Always raises `IO::Error` because this is a read-only `IO`.","summary":"<p>Always raises <code>IO::Error</code> because this is a read-only <code>IO</code>.</p>","abstract":false,"args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Bytes"}],"args_string":"(slice : Bytes)","args_html":"(slice : Bytes)","location":{"filename":"src/brotli/reader.cr","line_number":69,"url":null},"def":{"name":"unbuffered_write","args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(IO::Error.new(\"Can't write to Brotli::Reader\"))"}}],"macros":[],"types":[]},{"html_id":"brotli/Compress/Brotli/Writer","path":"Compress/Brotli/Writer.html","kind":"class","full_name":"Compress::Brotli::Writer","name":"Writer","abstract":false,"superclass":{"html_id":"brotli/IO","kind":"class","full_name":"IO","name":"IO"},"ancestors":[{"html_id":"brotli/IO","kind":"class","full_name":"IO","name":"IO"},{"html_id":"brotli/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"brotli/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"brotli","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"brotli/Compress/Brotli","kind":"module","full_name":"Compress::Brotli","name":"Brotli"},"doc":"A write-only `IO` object to compress data in the Brotli format.\n\nInstances of this class wrap another `IO` object. When you write to this\ninstance, it compresses the data and writes it to the underlying `IO`.\n\nNOTE: unless created with a block, `close` must be invoked after all\ndata has been written to a `Brotli::Writer` instance.\n\n### Example: compress a file\n\n```\nrequire \"brotli\"\n\nFile.write(\"file.txt\", \"abcd\")\n\nFile.open(\"./file.txt\", \"r\") do |input_file|\n  File.open(\"./file.br\", \"w\") do |output_file|\n    Compress::Brotli::Writer.open(output_file) do |br|\n      IO.copy(input_file, br)\n    end\n  end\nend\n```","summary":"<p>A write-only <code>IO</code> object to compress data in the Brotli format.</p>","class_methods":[{"id":"open(io:IO,options:Brotli::WriterOptions=Brotli::WriterOptions.default,sync_close:Bool=false,&)-class-method","html_id":"open(io:IO,options:Brotli::WriterOptions=Brotli::WriterOptions.default,sync_close:Bool=false,&)-class-method","name":"open","doc":"Creates a new writer for the given *io*, yields it to the given block,\nand closes it at its end.","summary":"<p>Creates a new writer for the given <em>io</em>, yields it to the given block, and closes it at its end.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"options","doc":null,"default_value":"Brotli::WriterOptions.default","external_name":"options","restriction":"Brotli::WriterOptions"},{"name":"sync_close","doc":null,"default_value":"false","external_name":"sync_close","restriction":"Bool"}],"args_string":"(io : IO, options : Brotli::WriterOptions = <span class=\"t\">Brotli</span><span class=\"t\">::</span><span class=\"t\">WriterOptions</span>.default, sync_close : Bool = <span class=\"n\">false</span>, &)","args_html":"(io : IO, options : <a href=\"../../Compress/Brotli/WriterOptions.html\">Brotli::WriterOptions</a> = <span class=\"t\">Brotli</span><span class=\"t\">::</span><span class=\"t\">WriterOptions</span>.default, sync_close : Bool = <span class=\"n\">false</span>, &)","location":{"filename":"src/brotli/writer.cr","line_number":58,"url":null},"def":{"name":"open","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"options","doc":null,"default_value":"Brotli::WriterOptions.default","external_name":"options","restriction":"Brotli::WriterOptions"},{"name":"sync_close","doc":null,"default_value":"false","external_name":"sync_close","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"writer = new(io, options: options, sync_close: sync_close)\nbegin\n  yield writer\nensure\n  writer.close\nend\n"}},{"id":"open(io:IO,options:Brotli::WriterOptions=Brotli::WriterOptions.default,sync_close=false,&)-class-method","html_id":"open(io:IO,options:Brotli::WriterOptions=Brotli::WriterOptions.default,sync_close=false,&)-class-method","name":"open","doc":"Creates a new writer to the given *io*, yields it to the given block,\nand closes it at the end.","summary":"<p>Creates a new writer to the given <em>io</em>, yields it to the given block, and closes it at the end.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"options","doc":null,"default_value":"Brotli::WriterOptions.default","external_name":"options","restriction":"Brotli::WriterOptions"},{"name":"sync_close","doc":null,"default_value":"false","external_name":"sync_close","restriction":""}],"args_string":"(io : IO, options : Brotli::WriterOptions = <span class=\"t\">Brotli</span><span class=\"t\">::</span><span class=\"t\">WriterOptions</span>.default, sync_close = <span class=\"n\">false</span>, &)","args_html":"(io : IO, options : <a href=\"../../Compress/Brotli/WriterOptions.html\">Brotli::WriterOptions</a> = <span class=\"t\">Brotli</span><span class=\"t\">::</span><span class=\"t\">WriterOptions</span>.default, sync_close = <span class=\"n\">false</span>, &)","location":{"filename":"src/brotli/writer.cr","line_number":44,"url":null},"def":{"name":"open","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"options","doc":null,"default_value":"Brotli::WriterOptions.default","external_name":"options","restriction":"Brotli::WriterOptions"},{"name":"sync_close","doc":null,"default_value":"false","external_name":"sync_close","restriction":""}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"writer = new(io, preset: preset, sync_close: sync_close)\nbegin\n  yield writer\nensure\n  writer.close\nend\n"}},{"id":"open(filename:String,options:Brotli::WriterOptions=Brotli::WriterOptions.default,&)-class-method","html_id":"open(filename:String,options:Brotli::WriterOptions=Brotli::WriterOptions.default,&)-class-method","name":"open","doc":"Creates a new writer to the given *filename*, yields it to the given block,\nand closes it at the end.","summary":"<p>Creates a new writer to the given <em>filename</em>, yields it to the given block, and closes it at the end.</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"options","doc":null,"default_value":"Brotli::WriterOptions.default","external_name":"options","restriction":"Brotli::WriterOptions"}],"args_string":"(filename : String, options : Brotli::WriterOptions = <span class=\"t\">Brotli</span><span class=\"t\">::</span><span class=\"t\">WriterOptions</span>.default, &)","args_html":"(filename : String, options : <a href=\"../../Compress/Brotli/WriterOptions.html\">Brotli::WriterOptions</a> = <span class=\"t\">Brotli</span><span class=\"t\">::</span><span class=\"t\">WriterOptions</span>.default, &)","location":{"filename":"src/brotli/writer.cr","line_number":51,"url":null},"def":{"name":"open","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"options","doc":null,"default_value":"Brotli::WriterOptions.default","external_name":"options","restriction":"Brotli::WriterOptions"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"writer = new(filename, options: options)\nbegin\n  yield writer\nensure\n  writer.close\nend\n"}}],"constructors":[{"id":"new(output:IO,options:Brotli::WriterOptions=Brotli::WriterOptions.default,sync_close:Bool=false)-class-method","html_id":"new(output:IO,options:Brotli::WriterOptions=Brotli::WriterOptions.default,sync_close:Bool=false)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"},{"name":"options","doc":null,"default_value":"Brotli::WriterOptions.default","external_name":"options","restriction":"Brotli::WriterOptions"},{"name":"sync_close","doc":null,"default_value":"false","external_name":"sync_close","restriction":"Bool"}],"args_string":"(output : IO, options : Brotli::WriterOptions = <span class=\"t\">Brotli</span><span class=\"t\">::</span><span class=\"t\">WriterOptions</span>.default, sync_close : Bool = <span class=\"n\">false</span>)","args_html":"(output : IO, options : <a href=\"../../Compress/Brotli/WriterOptions.html\">Brotli::WriterOptions</a> = <span class=\"t\">Brotli</span><span class=\"t\">::</span><span class=\"t\">WriterOptions</span>.default, sync_close : Bool = <span class=\"n\">false</span>)","location":{"filename":"src/brotli/writer.cr","line_number":28,"url":null},"def":{"name":"new","args":[{"name":"output","doc":null,"default_value":"","external_name":"output","restriction":"IO"},{"name":"options","doc":null,"default_value":"Brotli::WriterOptions.default","external_name":"options","restriction":"Brotli::WriterOptions"},{"name":"sync_close","doc":null,"default_value":"false","external_name":"sync_close","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(output, options, sync_close)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(filename:String,options:Brotli::WriterOptions=Brotli::WriterOptions.default)-class-method","html_id":"new(filename:String,options:Brotli::WriterOptions=Brotli::WriterOptions.default)-class-method","name":"new","doc":"Creates a new writer to the given *filename*.","summary":"<p>Creates a new writer to the given <em>filename</em>.</p>","abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"options","doc":null,"default_value":"Brotli::WriterOptions.default","external_name":"options","restriction":"Brotli::WriterOptions"}],"args_string":"(filename : String, options : Brotli::WriterOptions = <span class=\"t\">Brotli</span><span class=\"t\">::</span><span class=\"t\">WriterOptions</span>.default)","args_html":"(filename : String, options : <a href=\"../../Compress/Brotli/WriterOptions.html\">Brotli::WriterOptions</a> = <span class=\"t\">Brotli</span><span class=\"t\">::</span><span class=\"t\">WriterOptions</span>.default)","location":{"filename":"src/brotli/writer.cr","line_number":38,"url":null},"def":{"name":"new","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"},{"name":"options","doc":null,"default_value":"Brotli::WriterOptions.default","external_name":"options","restriction":"Brotli::WriterOptions"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(::File.new(filename, \"w\"), options: options, sync_close: true)"}}],"instance_methods":[{"id":"close-instance-method","html_id":"close-instance-method","name":"close","doc":"Closes this writer. Must be invoked after all data has been written.","summary":"<p>Closes this writer.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/brotli/writer.cr","line_number":91,"url":null},"def":{"name":"close","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @closed || @state.nil?\n  return\nend\nwrite_chunk(Bytes.empty, LibBrotli::EncoderOperation::OperationFinish)\nLibBrotli.encoder_destroy_instance(@state)\n@closed = true\nif @sync_close\n  @output.close\nend\n"}},{"id":"closed?:Bool-instance-method","html_id":"closed?:Bool-instance-method","name":"closed?","doc":"Returns `true` if this IO is closed.","summary":"<p>Returns <code>true</code> if this IO is closed.</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/brotli/writer.cr","line_number":100,"url":null},"def":{"name":"closed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@closed"}},{"id":"flush-instance-method","html_id":"flush-instance-method","name":"flush","doc":"See `IO#flush`.","summary":"<p>See <code>IO#flush</code>.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/brotli/writer.cr","line_number":84,"url":null},"def":{"name":"flush","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @closed\n  return\nend\nwrite_chunk(Bytes.empty, LibBrotli::EncoderOperation::OperationFlush)\n"}},{"id":"read(slice:Bytes)-instance-method","html_id":"read(slice:Bytes)-instance-method","name":"read","doc":"Always raises `IO::Error` because this is a write-only `IO`.","summary":"<p>Always raises <code>IO::Error</code> because this is a write-only <code>IO</code>.</p>","abstract":false,"args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Bytes"}],"args_string":"(slice : Bytes)","args_html":"(slice : Bytes)","location":{"filename":"src/brotli/writer.cr","line_number":71,"url":null},"def":{"name":"read","args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"raise(IO::Error.new(\"Can't read from Brotli::Writer\"))"}},{"id":"sync_close=(sync_close:Bool)-instance-method","html_id":"sync_close=(sync_close:Bool)-instance-method","name":"sync_close=","doc":"If `#sync_close?` is `true`, closing this IO will close the underlying IO.","summary":"<p>If <code><a href=\"../../Compress/Brotli/Writer.html#sync_close?:Bool-instance-method\">#sync_close?</a></code> is <code>true</code>, closing this IO will close the underlying IO.</p>","abstract":false,"args":[{"name":"sync_close","doc":null,"default_value":"","external_name":"sync_close","restriction":"Bool"}],"args_string":"(sync_close : Bool)","args_html":"(sync_close : Bool)","location":{"filename":"src/brotli/writer.cr","line_number":26,"url":null},"def":{"name":"sync_close=","args":[{"name":"sync_close","doc":null,"default_value":"","external_name":"sync_close","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@sync_close = sync_close"}},{"id":"sync_close?:Bool-instance-method","html_id":"sync_close?:Bool-instance-method","name":"sync_close?","doc":"If `#sync_close?` is `true`, closing this IO will close the underlying IO.","summary":"<p>If <code><a href=\"../../Compress/Brotli/Writer.html#sync_close?:Bool-instance-method\">#sync_close?</a></code> is <code>true</code>, closing this IO will close the underlying IO.</p>","abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/brotli/writer.cr","line_number":26,"url":null},"def":{"name":"sync_close?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@sync_close"}},{"id":"write(slice:Bytes):Nil-instance-method","html_id":"write(slice:Bytes):Nil-instance-method","name":"write","doc":"See `IO#write`.","summary":"<p>See <code>IO#write</code>.</p>","abstract":false,"args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Bytes"}],"args_string":"(slice : Bytes) : Nil","args_html":"(slice : Bytes) : Nil","location":{"filename":"src/brotli/writer.cr","line_number":76,"url":null},"def":{"name":"write","args":[{"name":"slice","doc":null,"default_value":"","external_name":"slice","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"check_open\nif slice.empty?\n  return 0_i64\nend\nwrite_chunk(slice, LibBrotli::EncoderOperation::OperationProcess)\n"}}],"macros":[],"types":[]},{"html_id":"brotli/Compress/Brotli/WriterOptions","path":"Compress/Brotli/WriterOptions.html","kind":"struct","full_name":"Compress::Brotli::WriterOptions","name":"WriterOptions","abstract":false,"superclass":{"html_id":"brotli/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"brotli/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"brotli/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"brotli/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[],"repository_name":"brotli","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"brotli/Compress/Brotli","kind":"module","full_name":"Compress::Brotli","name":"Brotli"},"doc":null,"summary":null,"class_methods":[{"id":"default-class-method","html_id":"default-class-method","name":"default","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/brotli/writer.cr","line_number":158,"url":null},"def":{"name":"default","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new"}}],"constructors":[{"id":"new(mode=LibBrotli::EncoderMode::ModeGeneric,quality=11_u32,lgwin=22_u32)-class-method","html_id":"new(mode=LibBrotli::EncoderMode::ModeGeneric,quality=11_u32,lgwin=22_u32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"mode","doc":null,"default_value":"LibBrotli::EncoderMode::ModeGeneric","external_name":"mode","restriction":""},{"name":"quality","doc":null,"default_value":"11_u32","external_name":"quality","restriction":""},{"name":"lgwin","doc":null,"default_value":"22_u32","external_name":"lgwin","restriction":""}],"args_string":"(mode = <span class=\"t\">LibBrotli</span><span class=\"t\">::</span><span class=\"t\">EncoderMode</span><span class=\"t\">::</span><span class=\"t\">ModeGeneric</span>, quality = <span class=\"n\">11_u32</span>, lgwin = <span class=\"n\">22_u32</span>)","args_html":"(mode = <span class=\"t\">LibBrotli</span><span class=\"t\">::</span><span class=\"t\">EncoderMode</span><span class=\"t\">::</span><span class=\"t\">ModeGeneric</span>, quality = <span class=\"n\">11_u32</span>, lgwin = <span class=\"n\">22_u32</span>)","location":{"filename":"src/brotli/writer.cr","line_number":141,"url":null},"def":{"name":"new","args":[{"name":"mode","doc":null,"default_value":"LibBrotli::EncoderMode::ModeGeneric","external_name":"mode","restriction":""},{"name":"quality","doc":null,"default_value":"11_u32","external_name":"quality","restriction":""},{"name":"lgwin","doc":null,"default_value":"22_u32","external_name":"lgwin","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(mode, quality, lgwin)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default?-instance-method","html_id":"default?-instance-method","name":"default?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/brotli/writer.cr","line_number":162,"url":null},"def":{"name":"default?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((self.mode == LibBrotli::EncoderMode::ModeGeneric) && (self.quality == 11)) && (self.lgwin == 22)"}},{"id":"lgwin:UInt32-instance-method","html_id":"lgwin:UInt32-instance-method","name":"lgwin","doc":"Base 2 logarithm of the maximum input block size. Range is 10 to 24. Defaults to 22.","summary":"<p>Base 2 logarithm of the maximum input block size.</p>","abstract":false,"args":[],"args_string":" : UInt32","args_html":" : UInt32","location":{"filename":"src/brotli/writer.cr","line_number":139,"url":null},"def":{"name":"lgwin","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@lgwin"}},{"id":"lgwin=(val)-instance-method","html_id":"lgwin=(val)-instance-method","name":"lgwin=","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/brotli/writer.cr","line_number":151,"url":null},"def":{"name":"lgwin=","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if 10 <= val && val <= 24\nelse\n  raise(ArgumentError.new(\"Invalid lgwin value: #{val} (must be in 10..24)\"))\nend\n@quality = val\n"}},{"id":"mode:LibBrotli::EncoderMode-instance-method","html_id":"mode:LibBrotli::EncoderMode-instance-method","name":"mode","doc":"compression mode","summary":"<p>compression mode</p>","abstract":false,"args":[],"args_string":" : LibBrotli::EncoderMode","args_html":" : LibBrotli::EncoderMode","location":{"filename":"src/brotli/writer.cr","line_number":134,"url":null},"def":{"name":"mode","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"LibBrotli::EncoderMode","visibility":"Public","body":"@mode"}},{"id":"mode=(mode:LibBrotli::EncoderMode)-instance-method","html_id":"mode=(mode:LibBrotli::EncoderMode)-instance-method","name":"mode=","doc":"compression mode","summary":"<p>compression mode</p>","abstract":false,"args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"LibBrotli::EncoderMode"}],"args_string":"(mode : LibBrotli::EncoderMode)","args_html":"(mode : LibBrotli::EncoderMode)","location":{"filename":"src/brotli/writer.cr","line_number":134,"url":null},"def":{"name":"mode=","args":[{"name":"mode","doc":null,"default_value":"","external_name":"mode","restriction":"LibBrotli::EncoderMode"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mode = mode"}},{"id":"quality:UInt32-instance-method","html_id":"quality:UInt32-instance-method","name":"quality","doc":"controls the compression speed vs compression density tradeoff. Higher the quality,\nslower the compression. Range is 0 to 11. Defaults to 11","summary":"<p>controls the compression speed vs compression density tradeoff.</p>","abstract":false,"args":[],"args_string":" : UInt32","args_html":" : UInt32","location":{"filename":"src/brotli/writer.cr","line_number":137,"url":null},"def":{"name":"quality","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"UInt32","visibility":"Public","body":"@quality"}},{"id":"quality=(val)-instance-method","html_id":"quality=(val)-instance-method","name":"quality=","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"args_string":"(val)","args_html":"(val)","location":{"filename":"src/brotli/writer.cr","line_number":144,"url":null},"def":{"name":"quality=","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if 0 <= val && val <= 11\nelse\n  raise(ArgumentError.new(\"Invalid quality level: #{val} (must be in 0..11)\"))\nend\n@quality = val\n"}}],"macros":[],"types":[]}]}]}]}})